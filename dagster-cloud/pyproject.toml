[build-system]
requires = [
    "setuptools>=61.2",
]
build-backend = "setuptools.build_meta"

[project]
name = "dagster-cloud"
requires-python = ">=3.9,<3.14"
dynamic = [
    "version",
]
authors = [
    { name = "Elementl", email = "support@elementl.com" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: System :: Monitoring",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Operating System :: OS Independent",
]
dependencies = [
    "dagster==1.11.4",
    "dagster-shared==1.11.4",
    "dagster-cloud-cli==1.11.4",
    "opentelemetry-api>=1.27.0,<2",
    "opentelemetry-sdk>=1.27.0,<2",
    "opentelemetry-exporter-otlp-proto-grpc>=1.27.0,<2",
    "opentelemetry-exporter-otlp-proto-http>=1.27.0,<2",
    "pex>=2.1.132,<3",
    "questionary",
    "requests",
    "typer",
]

[project.license]
text = "Apache-2.0"

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://dagster.io/cloud"
GitHub = "https://github.com/dagster-io/dagster-cloud"
Changelog = "https://github.com/dagster-io/dagster-cloud/blob/main/CHANGES.md"
"Issue Tracker" = "https://github.com/dagster-io/dagster-cloud/issues"
Twitter = "https://twitter.com/dagster"
LinkedIn = "https://www.linkedin.com/showcase/dagster"
YouTube = "https://www.youtube.com/channel/UCfLnv9X8jyHTe6gJ4hVBo9Q"
Slack = "https://dagster.io/slack"
Blog = "https://dagster.io/blog"
Newsletter = "https://dagster.io/newsletter-signup"

[project.optional-dependencies]
tests = [
    "docker",
    "httpretty",
    "isort",
    "freezegun",
    "wordcloud",
    "kubernetes",
    "moto[all]",
    "mypy",
    "psutil",
    "pylint",
    "pytest",
    "types-PyYAML",
    "types-requests",
    "dagster-cloud-test-infra",
    "dbt-bigquery>=1.9.0",
    "dbt-core",
    "dbt-snowflake",
    "dbt-duckdb",
    "dagster-dbt",
    "dagster-k8s",
    "dagster-cloud-backend",
]
insights = [
    "pyarrow",
]
docker = [
    "docker",
    "dagster-docker==0.27.4",
]
kubernetes = [
    "kubernetes",
    "dagster-k8s==0.27.4",
]
ecs = [
    "dagster-aws==0.27.4",
    "boto3",
]
sandbox = [
    "supervisor",
]
pex = [
    "boto3",
]
serverless = [
    "boto3",
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.dynamic.version]
attr = "dagster_cloud.version.__version__"

[tool.setuptools.packages.find]
exclude = [
    "dagster_cloud_tests*",
]
namespaces = false
